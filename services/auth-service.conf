# Internal route that check if session is valid
# It's purpose is to be subrequest for private route
# In your web server you either return response status 2xx if you want to pass on another request
# In my example 200 if session is still valid, 403 if user is unauthorized

location /auth/required {
        internal;
        proxy_pass http://auth;

        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header X-Original-Remote-Addr $remote_addr;
        proxy_set_header X-Original-Host $host;
}

# How to use it in protected locations
#
# location /some/protected/route/ {
#	auth_request /auth/required; # Order matters, it must be above proxy_pass
#	proxy_pass http://some-protected-resource/
#	... rest
# }

# External location

location /api/auth/ { 	
	limit_req zone=seven;

        access_log /var/log/nginx/auth.service.access.log;
        error_log /var/log/nginx/auth.service.error.log;
	
	proxy_pass http://auth/;

	proxy_set_header Upgrade $http_upgrade;
	proxy_set_header Connection 'upgrade';
	proxy_set_header Host $host;
}


